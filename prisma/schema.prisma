// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init
datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}


generator client {
  provider = "prisma-client-js"
}

enum Role {
  OWNER
  EDITOR
  VIEWER
}

model User {
  id          String       @id @default(cuid())
  email       String       @unique
  password    String
  memberships Membership[]
  sessions    Session[]
  invites     Invite[]     @relation("InviterInvites")
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
}

model Workspace {
  id          String       @id @default(cuid())
  name        String       @unique
  memberships Membership[]
  records     Record[]
  invites     Invite[]
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
}

model Membership {
  id          String     @id @default(cuid())
  user        User       @relation(fields: [userId], references: [id])
  userId      String
  workspace   Workspace  @relation(fields: [workspaceId], references: [id])
  workspaceId String
  role        Role

  @@unique([userId, workspaceId])
}

model Record {
  id          String     @id @default(cuid())
  title       String
  content     String
  workspace   Workspace  @relation(fields: [workspaceId], references: [id])
  workspaceId String
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
}

model Session {
  id         String   @id @default(cuid())
  token      String   @unique
  user       User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId     String
  ip         String?
  userAgent  String?
  expiresAt  DateTime
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@index([userId])
  @@index([expiresAt])
}


model Invite {
  id          String     @id @default(cuid())
  workspace   Workspace  @relation(fields: [workspaceId], references: [id])
  workspaceId String
  inviter     User       @relation("InviterInvites", fields: [inviterId], references: [id])
  inviterId   String
  email       String
  token       String     @unique
  expiresAt   DateTime
  accepted    Boolean    @default(false)
  createdAt   DateTime   @default(now())
}
